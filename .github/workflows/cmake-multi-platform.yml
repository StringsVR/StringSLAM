name: CMake Multi-Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build (${{ matrix.os }} | ${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up CMake
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.26.4'

      # ---------------- Linux ----------------
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libopencv-dev libeigen3-dev libopenexr-dev

      # ---------------- Windows ----------------
      - name: Set up vcpkg (Windows)
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11
        with:
          # Pin a commit for reproducibility
          vcpkgGitCommitId: '2025.01.15'
          # Cache key depends on your manifest
          vcpkgJsonGlob: 'vcpkg.json'

      # Configure (Linux)
      - name: Configure with CMake (Linux)
        if: runner.os == 'Linux'
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      # Configure (Windows)
      - name: Configure with CMake (Windows)
        if: runner.os == 'Windows'
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_TOOLCHAIN_FILE }}

      # Build
      - name: Build
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake --build build --config ${{ matrix.build_type }} -- /m
          else
            cmake --build build --config ${{ matrix.build_type }} --parallel
          fi

      # Install
      - name: Install
        run: cmake --install build --prefix instdir
